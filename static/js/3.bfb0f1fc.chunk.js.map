{"version":3,"sources":["components/common/FormControls/FormControls.module.css","components/common/FormControls/FormControls.jsx","utils/validators/validators.js","components/Dialogs/Dialogs.module.css","hoc/AuthRedirect.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsСontainer.jsx"],"names":["module","exports","formControl","error","formSummaryError","FormControl","_ref","input","_ref$meta","meta","touched","props","child","Object","_Users_lapakot_Desktop_sandbox_network_social_net_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","children","Textarea","restProps","assign","Input","createField","placeholder","nameField","validate","component","typeField","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","name","type","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","length","concat","dialogs","dialogsItems","messages","dialog","active","withAuthRedirect","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","react_redux__WEBPACK_IMPORTED_MODULE_1__","react_router_dom__WEBPACK_IMPORTED_MODULE_2__","mapStateToPropsForRedirect","state","isAuth","auth","Component","connect","to","DialogItem","path","id","react_default","s","dist","navData","isActive","Message","message","maxLengthMessage","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","Dialogs","dialogsPage","dialogsMassive","dialogsData","map","index","Dialogs_DialogItem_DialogItem","key","messagesMassive","messagesData","Dialogs_Message_Message","values","sendMessage","newMessageBody","react_router_dist","compose","dispatch","sendNewMessageActionCreator"],"mappings":"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","file":"static/js/3.bfb0f1fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1l7D3\",\"error\":\"FormControls_error__23iOF\",\"formSummaryError\":\"FormControls_formSummaryError__2Qsn1\"};","import React from \"react\";\nimport styles from \"./FormControls.module.css\";\nimport { Field } from \"redux-form\";\n\nexport const FormControl = ({ input, meta: {touched, error}, child, ...props }) => {\n  const hasError = touched && error;\n\n  return (\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n      <div>{props.children}</div>\n      <div>{hasError && <span>{error}</span>}</div>\n    </div>\n  );\n};\n\nexport const Textarea = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <textarea {...input} {...restProps}></textarea>\n    </FormControl>\n  );\n};\n\nexport const Input = (props) => {\n  const { input, meta, child, ...restProps } = props;\n  return (\n    <FormControl {...props}>\n      <input {...input} {...restProps}></input>\n    </FormControl>\n  );\n};\n\nexport const createField = (\n  placeholder,\n  nameField,\n  validate,\n  component,\n  typeField,\n  text\n) => {\n  return (\n    <div>\n      <Field\n        placeholder={placeholder}\n        name={nameField}\n        validate={validate}\n        component={component}\n        type={typeField}\n      />\n      {text}\n    </div>\n  );\n};\n","export const required = (value) => {\n  if (value) {\n    return undefined;\n  }\n  return \"Поле обязательное\";\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n  if (value.length > maxLength) {\n    return `Максимальная длина ${maxLength} символов`;\n  }\n  return undefined;\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3Zqze\",\"dialogsItems\":\"Dialogs_dialogsItems__13nTA\",\"messages\":\"Dialogs_messages__2MWKK\",\"dialog\":\"Dialogs_dialog__MEkL4\",\"active\":\"Dialogs_active__1AQXL\"};","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nconst mapStateToPropsForRedirect = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nexport const withAuthRedirect = (Component) => {\n  const RedirectComponent = (props) => {\n    if (!props.isAuth) {\n      return <Navigate to=\"/login\"></Navigate>;\n    }\n    return <Component {...props} />;\n  };\n\n  const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n    RedirectComponent\n  );\n\n  return ConnectedAuthRedirectComponent;\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./../Dialogs.module.css\";\n\nconst DialogItem = (props) => {\n  const path = `/dialogs/${props.id}`;\n\n  return (\n    <div className={s.dialog + \" \" + s.active}>\n      <NavLink\n        to={path}\n        className={(navData) => (navData.isActive ? s.active : s.dialog)}\n      >\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return <div className={s.dialog}>{props.message}</div>;\n};\n\nexport default Message;\n","import React from \"react\";\nimport DialogItem from \"./DialogItem/DialogItem.jsx\";\nimport Message from \"./Message/Message\";\nimport s from \"./Dialogs.module.css\";\nimport { Navigate } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormControls/FormControls.jsx\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators.js\";\n\nconst maxLengthMessage = maxLengthCreator(10);\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n\n  const dialogsMassive = state.dialogsData.map((dialog, index) => {\n    return (\n      <DialogItem\n        id={dialog.id}\n        name={dialog.name}\n        key={index}\n      ></DialogItem>\n    );\n  });\n\n  const messagesMassive = state.messagesData.map((message, index) => {\n    return (\n      <Message\n        id={message.id}\n        message={message.text}\n        key={index}\n      ></Message>\n    );\n  });\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n\tvalues.newMessageBody = '';\n  };\n\n  if (!props.isAuth) {\n    return <Navigate to=\"/login\"></Navigate>;\n  }\n\n  return (\n    <div>\n      <div className={s.dialogs}>\n        <div className={s.dialogsItems}>{dialogsMassive}</div>\n        <div className={s.messages}>\n          <div>{messagesMassive}</div>\n          <AddMessageFormRedux onSubmit={addNewMessage} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field\n          component={Textarea}\n\t\t  validate={[required, maxLengthMessage]}\n          name=\"newMessageBody\"\n          placeholder=\"Введите сообщение\"\n        />\n      </div>\n      <div>\n        <button>Отправить сообщение</button>\n      </div>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import { connect } from \"react-redux\";\nimport { sendNewMessageActionCreator } from \"../../redux/dialogs-reducer.js\";\nimport Dialogs from \"./Dialogs.jsx\";\nimport { withAuthRedirect } from \"../../hoc/AuthRedirect.jsx\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendNewMessageActionCreator(newMessageBody));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}